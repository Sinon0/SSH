<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">
       
     <!-- context声明命名空间 -->
     <context:annotation-config/>
     <context:component-scan base-package="com.wy.impl,com.wy.service.impl"/>
     
     <!-- 说明aop是通过注解的方式进行的 -->
     <aop:aspectj-autoproxy/>
     
     <!-- 整合Spring与hibernate配置hibernate数据源 使用Apache数据源引入commons-dbcp架包 -->
     <!-- 第三步：创建数据源参数文件，并读取外部文件，获取数据源参数 -->
     <context:property-placeholder location="classpath:dataSource.properties"/>
     <!-- 第一步：配置数据源 -->
     <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
     	<!-- 初始化连接数量 -->
     	<property name="initialSize" value="0"/>
     	<!-- 最大并发连接数 -->
     	<property name="maxActive" value="20"/>
     	<!-- 最大空闲连接数 -->
     	<property name="maxIdle" value="20"/>
     	<!-- 最小空闲连接数 -->
     	<property name="minIdle" value="0"/>
     	<!-- 最大等待时间 -->
     	<property name="maxWait" value="60000"/>
     	<!-- 超过时间限制是否回收 -->
     	<property name="removeAbandoned" value="true"/>
     	<!-- 超过时间限制最长 -->
     	<property name="removeAbandonedTimeout" value="180"/>
     	
     	<!-- 第二步：数据源连接参数配置 -->
     	<property name="username" value="${db.username}"/>
     	<property name="url" value="${db.url}"/>
     	<property name="password" value="${db.password}"/>
     	<property name="driverClassName" value="${db.driverClassName}"/>	
     </bean>
     
     <!-- 第四步：sessionFactory配置 -->
     <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
     	<property name="dataSource" ref="dataSource"/>
     	<property name="packagesToScan" value="com.wy.entity"/>
     	<property name="hibernateProperties">
     		<props>
     			<prop key="hibernate.dialect">${hibernate.dialect}</prop>
     			<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
     			<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
     			<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
     		</props>
     	</property>
     </bean>
     
     
     <!-- 第五步：配置事务管理器 -->
     <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
     	<property name="sessionFactory" ref="sessionFactory"/>
     </bean>
     
     <!-- 第六步：初始化hibernateTemplate:作用将代码变得简单 -->
     <bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
     	<property name="sessionFactory"  ref="sessionFactory"/>
     </bean>
     
     <!-- 第七步：定义切面 --> 
     <aop:config>
     	<aop:pointcut expression="execution(* com.wy.service.impl.*.*(..))" id="txPointCut"/>
     	<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut"/>
     </aop:config>
     
     <!-- 声明式事务 -->
     <tx:advice id="txAdvice" transaction-manager="transactionManager">
     	<tx:attributes>
     		<tx:method name="add*" propagation="REQUIRED"/>
     		<tx:method name="get*" read-only="true" propagation="REQUIRED"/>
     		<tx:method name="check*" read-only="true" propagation="REQUIRED"/>
     	</tx:attributes>
     </tx:advice>
</beans>